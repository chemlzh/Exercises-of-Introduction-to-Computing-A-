#include <algorithm>
#include <cstdio>
using namespace std;
long n, cnt, ans, tmp, a[25];
int main() {
	scanf("%ld", &n);
	for (long i = 1; i <= n; i++) {
		scanf("%ld", &tmp); 
		if (tmp <= 170) a[++cnt] = tmp;
	}
	sort(a + 1, a + cnt + 1);
	long time = 60;
	for (long i = 1; i <= cnt; i++) {
		if (time > 170) break;
		if (time >= a[i]) { ans++; time += 10; }
		else { ans++; time = a[i] + 10; }
	}
	printf("%ld", ans);
}

/*
描述
医院某科门诊早上开两个小时，从8点开始可以排队，9点开始正式门诊。
每个病人需要看10分钟(若最后剩余不足10分钟，则不进行门诊)，11点门诊结束。
输入包含n（n<=20）个病人的到达时间（距离8点的分钟数），输出最终得到门诊的病人数。

输入
第一行为病人数n。
之后有n行，每行为病人到达的时间

输出
一个整数：能得到门诊的病人数
*/

/*
解法：戏称为医院挂号解法。
首先我们让在10时50分之前（包括10时50分）到达医院的病人“挂号”（记录病人到达医院的时间），并按时刻先后排序。
然后如果病人到达医院的时间比医生开始接诊（或接诊完一个病人）的时刻早，则医生诊完这位病人的时刻为诊完上一位病人的时刻加十分钟，
否则，医生诊完这位病人的时刻为该病人到达医院的时刻加十分钟。
如果医生接诊完病人，已经超过10时50分，则停止接诊，并记录接诊病人个数。
*/